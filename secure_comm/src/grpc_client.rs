use tonic::metadata::MetadataValue;
use tonic::Request;
use std::str::FromStr;

// Generated by tonic-build from proto/verifier.proto
use crate::proto::verifier::verifier_client::VerifierClient;
use crate::proto::verifier::PayloadBytes;

pub async fn make_grpc_request(
    payload: Vec<u8>,
    server_url: String,
    signature_b64: Option<String>,
    thumbprint: Option<String>,
) -> Result<String, Box<dyn std::error::Error>> {
    let mut client = VerifierClient::connect(server_url).await?;

    let mut request = Request::new(PayloadBytes { data: payload });

    if let Some(sig) = signature_b64 {
        request.metadata_mut().insert(
            "signature",
            MetadataValue::from_str(&sig)?,
        );
    }

    if let Some(tp) = thumbprint {
        request.metadata_mut().insert(
            "thumbprint",
            MetadataValue::from_str(&tp)?,
        );
    }

    let response = client.verify(request).await?;
    Ok(response.into_inner().result)
}

